xUnit.BDDExtensions.Reporting.Specs    13 concerns, 27 contexts, 40 observations
====================================================================================================

String specifications     (1 context, 1 observation)
----------------------------------------------------------------------------------------------------

    After this "fake" specification has been executed    (1 observation)
        - it should effectively do "nothing"


ReportEngine specifications     (1 context, 3 observations)
----------------------------------------------------------------------------------------------------

    When running the reporting engine    (3 observations)
        - should get the target assemblies from the arguments
        - should build a report model for each configured assembly
        - should generate a report based on each report model


Observation specifications     (4 contexts, 10 observations)
----------------------------------------------------------------------------------------------------

    When building observations from a valid context type    (1 observation)
        - should create observations for all public methods marked with the "ObservationAttribute"

    When building observations from a type without marked methods    (1 observation)
        - should create an empty collection

    After creating a readable representation of an "Observation"    (4 observations)
        - should have lower cased the first letter
        - should have replaced underscores with spaces
        - should have replaced double underscores with double quotes
        - should have created the expected text

    After creating a readable representation of a "Context"    (4 observations)
        - should have capitalized the first letter
        - should have replaced underscores with spaces
        - should have replaced double underscores with double quotes
        - should have created the expected text


CollectionArgumentKey`1 specifications     (3 contexts, 3 observations)
----------------------------------------------------------------------------------------------------

    When reading an existing set of string values from a map of arguments    (1 observation)
        - should be able to obtain the collection for the specified key from the map

    When reading an from an empty map of arguments    (1 observation)
        - should return an empty collection

    When reading an existing set of int values from a from a map of arguments    (1 observation)
        - should be able to obtain the values for the specified key from the map


ArgumentMapFactory specifications     (4 contexts, 5 observations)
----------------------------------------------------------------------------------------------------

    When mapping console arguments to a one to many map    (2 observations)
        - should split the arguments based on a slash and a colon
        - should group multiple occurances of an argument by the key

    When mapping console arguments containing a file path to a one to many map    (1 observation)
        - should be able to extract the file path

    When mapping console arguments containing a file path with spaces to a one to many map    (1 observation)
        - should be able to extract the file path

    When trying to mal formatted console arguments    (1 observation)
        - should throw an "ArgumentExeption" indicating malformatted arguments


AssemblyLoader specifications     (2 contexts, 2 observations)
----------------------------------------------------------------------------------------------------

    When trying to load an assembly by the assembly name    (1 observation)
        - should be able to load the assembly

    When trying to load an assembly by its file name    (1 observation)
        - should be able to load the assembly


Pluralizer specifications     (3 contexts, 3 observations)
----------------------------------------------------------------------------------------------------

    When deciding whether to pluralize a specified name based on a specified amount and the amount is equal to one    (1 observation)
        - should not pluralize the name

    When deciding whether to pluralize a specified name based on a specified amount and the amount is less than one    (1 observation)
        - should not pluralize the name

    When deciding whether to pluralize a specified name based on a specified amount and the amount is larger than one    (1 observation)
        - should pluralize the name


Arguments specifications     (1 context, 1 observation)
----------------------------------------------------------------------------------------------------

    When queried with a key and the value exists in the underlying data source    (1 observation)
        - should be able to retrieve the related value


Assembly specifications     (2 contexts, 2 observations)
----------------------------------------------------------------------------------------------------

    When trying to find all types in an assembly matching a specified criteria    (1 observation)
        - should find all types matching the criteria

    When trying to read the name of an assembly    (1 observation)
        - should return the short name of the assembly


SimpleArgumentKey`1 specifications     (2 contexts, 2 observations)
----------------------------------------------------------------------------------------------------

    When reading an existing string value from a map of arguments    (1 observation)
        - should be able to obtain the correct value for the specified key from the map

    When reading an existing int value from a map of arguments    (1 observation)
        - should be able to obtain the correct value for the specified key from the map


Context specifications     (1 context, 2 observations)
----------------------------------------------------------------------------------------------------

    When building a context from a valid context type    (2 observations)
        - should create a context
        - should create observations for all public methods marked with the "ObservationAttribute"


ModelBuilder specifications     (1 context, 4 observations)
----------------------------------------------------------------------------------------------------

    After a report model has been build from an assembly    (4 observations)
        - it should precisely indicate how many "Context" specifications have been found
        - it should precisely indicate how many "Concerns" have been found
        - it should precisely indicate how many  Observations have been found
        - it should reference the short name of the assembly it was build from


DirectiveManagerProxy specifications     (2 contexts, 2 observations)
----------------------------------------------------------------------------------------------------

    When a directive is registered inside NVelocity and NVelocity has been merged into BDDExtensions    (1 observation)
        - should replace the assembly part of the assembly qualified name with the name of BDDExtensions

    When a directive is registered inside NVelocity and NVelocity was not merged into BDDExtensions    (1 observation)
        - should not update the directives assembly qualified name


